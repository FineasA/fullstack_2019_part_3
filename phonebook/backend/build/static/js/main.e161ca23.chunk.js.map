{"version":3,"sources":["components/Contacts.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/SuccessNotification.js","components/ErrorNotification.js","App.js","index.js"],"names":["Contacts","props","result","content","map","person","name","number","filter","toLowerCase","includes","requestedFilter","personsList","index","key","onClick","removePerson","id","length","Filter","onSubmit","searchName","value","findName","onChange","handleNameFilter","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","axios","get","then","response","data","newObj","post","put","delete","SuccessNotification","message","className","ErrorNotification","App","useState","persons","setPersons","setNewName","setNewNumber","setFoundName","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","e","preventDefault","searchedName","console","log","target","namesObject","some","p","window","confirm","find","changedPerson","returnedPerson","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e161ca23.chunk.js","sourcesContent":["import React from 'react';\n\nconst Contacts = props => {\n  const filteredNames = props.content.map(person => ({\n    name: person.name,\n    number: person.number\n  }));\n  //   console.log(filteredNames);\n\n  const result = filteredNames.filter(name => {\n    // console.log(name.name, props.requestedFilter);\n    const currentFiltered = name.name\n      .toLowerCase()\n      .includes(props.requestedFilter.toLowerCase());\n    return currentFiltered;\n  });\n\n  //   console.log('result', result);\n  //   console.log('from contacts', props.content);\n\n  let personsList = props.content.map((person, index) => {\n    return (\n      <li key={index}>\n        {person.name} : {person.number} :{' '}\n        <button onClick={() => props.removePerson(person.id, person.name)}>\n          delete\n        </button>\n      </li>\n    );\n  });\n  if (\n    props.requestedFilter.length > 0 &&\n    props.requestedFilter !== 'filter name...'\n  ) {\n    personsList = result.map((person, index) => {\n      return (\n        <li key={index}>\n          {person.name} : {person.number}\n        </li>\n      );\n    });\n  }\n  return <ul>{personsList}</ul>;\n};\n\nexport default Contacts;\n","import React from 'react';\n\nconst Filter = props => {\n  return (\n    <form onSubmit={props.searchName}>\n      <div>\n        Find name:{' '}\n        <input value={props.findName} onChange={props.handleNameFilter} />\n      </div>\n    </form>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = props => {\n  return (\n    <form onSubmit={props.addName}>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange} />\n      </div>\n      <div>\n        number:{' '}\n        <input value={props.newNumber} onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type='submit'>add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObj => {\n  const request = axios.post(baseUrl, newObj);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObj) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObj);\n  return request.then(response => response.data);\n};\n\nconst remove = (id, newObj) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove\n};\n","import React from 'react';\n\nconst SuccessNotification = props => {\n  if (props.message === null) {\n    return null;\n  }\n  return <div className='success'>{props.message}</div>;\n};\n\nexport default SuccessNotification;\n","import React from 'react';\n\nconst ErrorNotification = props => {\n  if (props.message === null) {\n    return null;\n  }\n  return <div className='error'>{props.message}</div>;\n};\n\nexport default ErrorNotification;\n","import React, { useState, useEffect } from 'react';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport personService from './services/persons';\nimport SuccessNotification from './components/SuccessNotification';\nimport ErrorNotification from './components/ErrorNotification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('a new name...');\n  const [newNumber, setNewNumber] = useState('a new number...');\n  const [findName, setFoundName] = useState('filter name...');\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // * SERVER SIDE\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  // * STATE CHANGES\n\n  const addName = e => {\n    e.preventDefault();\n    const namesObject = {\n      name: newName,\n      number: newNumber\n    };\n\n    if (\n      persons.some(\n        p => p.name === namesObject.name && p.number !== namesObject.number\n      )\n    ) {\n      const result = window.confirm(\n        `${namesObject.name} is already added to the phonebook, replace the older number with a new one?`\n      );\n      if (result === true) {\n        const person = persons.find(p => p.name === namesObject.name);\n        const changedPerson = { ...person, number: newNumber };\n\n        personService\n          .update(person.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(\n              persons.map(p => (p.id !== changedPerson.id ? p : returnedPerson))\n            );\n            setSuccessMessage(\n              `The number for ${changedPerson.name} has been changed successfully.`\n            );\n            setTimeout(() => {\n              setSuccessMessage(null);\n            }, 5000);\n          })\n          .catch(error => {\n            setErrorMessage(\n              `Information of ${changedPerson.name} has already been removed from the server. Please reload the page and try again.`\n            );\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n          });\n      }\n    } else {\n      personService\n        .create(namesObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson));\n          setSuccessMessage(`Added ${namesObject.name}`);\n          setTimeout(() => {\n            setSuccessMessage(null);\n          }, 5000);\n        })\n        .catch(error => {\n          setErrorMessage(`${error.response.data.error}`);\n\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        });\n    }\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const removePerson = (id, name) => {\n    const result = window.confirm(`Delete ${name}?`);\n    if (result === true) {\n      const person = persons.filter(p => p.id !== id);\n      console.log(persons);\n      personService.remove(id, person).then(returnedPerson => {\n        setPersons(person);\n      });\n    } else {\n      return;\n    }\n  };\n\n  const searchName = e => {\n    e.preventDefault();\n    const searchedName = findName;\n\n    setFoundName(searchedName);\n    console.log(searchedName);\n  };\n\n  // * HANDLERS\n\n  const handleNameChange = e => {\n    setNewName(e.target.value);\n    // console.log(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleNameFilter = e => {\n    setFoundName(e.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessNotification message={successMessage} />\n      <ErrorNotification message={errorMessage} />\n      <Filter\n        searchName={searchName}\n        findName={findName}\n        handleNameFilter={handleNameFilter}\n      />\n      <h2>Add a new contact</h2>\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Contacts\n        content={persons}\n        requestedFilter={findName}\n        removePerson={removePerson}\n      />\n      {/* <div>debug: {newName}</div> */}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}